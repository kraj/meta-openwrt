From 3dbcb4b673625dc18bdcfb7c835f46a52160a9eb Mon Sep 17 00:00:00 2001
From: Matthew Stanger <stangerm2@gmail.com>
Date: Thu, 16 Jul 2020 15:40:32 -0600
Subject: [PATCH] contents.c: Add mising include for major/minor

This code doesn't compile due to missing sys header.

Error:
contents.c:268: undefined reference to `minor'
---
 contents.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/contents.c b/contents.c
index 1e5361e..51f8e35 100644
--- a/contents.c
+++ b/contents.c
@@ -15,6 +15,7 @@
  */
 
 #include <sys/stat.h>
+#include <sys/sysmacros.h>
 #include <string.h>
 #include <stdio.h>
 
@@ -103,7 +104,7 @@ u32 make_directory(u32 dir_inode_num, u32 entries, struct dentry *dentries,
 	len = blocks * info.block_size;
 
 	if (dir_inode_num) {
-		inode_num = allocate_inode(info);
+		inode_num = allocate_inode();
 	} else {
 		dir_inode_num = EXT4_ROOT_INO;
 		inode_num = EXT4_ROOT_INO;
@@ -171,7 +172,7 @@ u32 make_file(const char *filename, u64 len)
 	struct ext4_inode *inode;
 	u32 inode_num;
 
-	inode_num = allocate_inode(info);
+	inode_num = allocate_inode();
 	if (inode_num == EXT4_ALLOCATE_FAILED) {
 		error("failed to allocate inode\n");
 		return EXT4_ALLOCATE_FAILED;
@@ -206,7 +207,7 @@ u32 make_link(const char *link)
 	u32 inode_num;
 	u32 len = strlen(link);
 
-	inode_num = allocate_inode(info);
+	inode_num = allocate_inode();
 	if (inode_num == EXT4_ALLOCATE_FAILED) {
 		error("failed to allocate inode\n");
 		return EXT4_ALLOCATE_FAILED;
@@ -247,7 +248,7 @@ u32 make_special(const char *path)
 		return EXT4_ALLOCATE_FAILED;
 	}
 
-	inode_num = allocate_inode(info);
+	inode_num = allocate_inode();
 	if (inode_num == EXT4_ALLOCATE_FAILED) {
 		error("failed to allocate inode\n");
 		return EXT4_ALLOCATE_FAILED;
-- 
2.17.1

